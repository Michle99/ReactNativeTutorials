{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Cake from \"./Cake\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { getCaksThunk } from \"./reduxstore/thunks\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction Cakelist(props) {\n  useEffect(function () {\n    props.dispatch(getCaksThunk());\n  }, []);\n  return _jsx(ScrollView, {\n    children: props.cakes.map(function (each, index) {\n      return _createElement(Cake, _objectSpread(_objectSpread({}, props), {}, {\n        data: each,\n        key: index\n      }));\n    })\n  });\n}\n\nexport default connect(function (state, props) {\n  return {\n    cakes: state[\"cakes\"] || []\n  };\n})(Cakelist);","map":{"version":3,"sources":["C:/Users/sammi/Downloads/ReactNativeToday/Cakelist.js"],"names":["Cake","useEffect","useState","axios","connect","getCaksThunk","Cakelist","props","dispatch","cakes","map","each","index","state"],"mappings":";;;;;;;AACA,OAAOA,IAAP;AACA,SAASC,SAAT,EAAqBC,QAArB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAEpBN,EAAAA,SAAS,CAAC,YAAI;AACXM,IAAAA,KAAK,CAACC,QAAN,CAAeH,YAAY,EAA3B;AACF,GAFQ,EAEP,EAFO,CAAT;AAGA,SACI,KAAC,UAAD;AAAA,cACKE,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD,EAAMC,KAAN,EAAc;AACvB,aAAO,eAAC,IAAD,kCAAUL,KAAV;AAAiB,QAAA,IAAI,EAAEI,IAAvB;AAA6B,QAAA,GAAG,EAAEC;AAAlC,SAAP;AACP,KAFA;AADL,IADJ;AAOH;;AAED,eAAeR,OAAO,CAAC,UAASS,KAAT,EAAeN,KAAf,EAAqB;AACxC,SAAO;AACHE,IAAAA,KAAK,EAAGI,KAAK,CAAC,OAAD,CAAL,IAAkB;AADvB,GAAP;AAGH,CAJqB,CAAP,CAIXP,QAJW,CAAf","sourcesContent":["import { ScrollView } from \"react-native\";\nimport Cake from \"./Cake\";\nimport { useEffect , useState} from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { getCaksThunk } from \"./reduxstore/thunks\";\n\nfunction Cakelist(props){\n\n    useEffect(()=>{\n       props.dispatch(getCaksThunk())\n    },[])\n    return (\n        <ScrollView>\n            {props.cakes.map((each,index)=>{\n                    return <Cake {...props} data={each} key={index} />\n            })}\n        </ScrollView>\n    )\n}\n\nexport default connect(function(state,props){\n    return {\n        cakes : state[\"cakes\"] || []\n    }\n})( Cakelist)"]},"metadata":{},"sourceType":"module"}